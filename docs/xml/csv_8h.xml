<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="csv_8h" kind="file" language="C++">
    <compoundname>csv.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cstring</includes>
    <includes local="no">exception</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">condition_variable</includes>
    <includes local="no">mutex</includes>
    <includes local="no">thread</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cerrno</includes>
    <includes local="no">istream</includes>
    <includes local="no">limits</includes>
    <includes local="no">memory</includes>
    <includedby refid="input_reader_8h" local="yes">include/black-scholes-cpp/inputReader.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/black-scholes-cpp/csv.h</label>
        <link refid="csv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="12">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>cerrno</label>
      </node>
      <node id="9">
        <label>condition_variable</label>
      </node>
      <node id="3">
        <label>cstdio</label>
      </node>
      <node id="4">
        <label>cstring</label>
      </node>
      <node id="5">
        <label>exception</label>
      </node>
      <node id="14">
        <label>istream</label>
      </node>
      <node id="15">
        <label>limits</label>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
      <node id="10">
        <label>mutex</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="11">
        <label>thread</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/black-scholes-cpp/Program.h</label>
        <link refid="_program_8h"/>
      </node>
      <node id="4">
        <label>include/black-scholes-cpp/blackScholesModel.h</label>
        <link refid="black_scholes_model_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/black-scholes-cpp/csv.h</label>
        <link refid="csv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/black-scholes-cpp/hestonModel.h</label>
        <link refid="heston_model_8h"/>
      </node>
      <node id="2">
        <label>include/black-scholes-cpp/inputReader.h</label>
        <link refid="input_reader_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/black-scholes-cpp/optionGreeks.h</label>
        <link refid="option_greeks_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/black-scholes-cpp/optionGreeksModel.h</label>
        <link refid="option_greeks_model_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structio_1_1error_1_1base" prot="public">io::error::base</innerclass>
    <innerclass refid="structio_1_1error_1_1with__file__name" prot="public">io::error::with_file_name</innerclass>
    <innerclass refid="structio_1_1error_1_1with__file__line" prot="public">io::error::with_file_line</innerclass>
    <innerclass refid="structio_1_1error_1_1with__errno" prot="public">io::error::with_errno</innerclass>
    <innerclass refid="structio_1_1error_1_1can__not__open__file" prot="public">io::error::can_not_open_file</innerclass>
    <innerclass refid="structio_1_1error_1_1line__length__limit__exceeded" prot="public">io::error::line_length_limit_exceeded</innerclass>
    <innerclass refid="classio_1_1_byte_source_base" prot="public">io::ByteSourceBase</innerclass>
    <innerclass refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base" prot="public">io::detail::OwningStdIOByteSourceBase</innerclass>
    <innerclass refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source" prot="public">io::detail::NonOwningIStreamByteSource</innerclass>
    <innerclass refid="classio_1_1detail_1_1_non_owning_string_byte_source" prot="public">io::detail::NonOwningStringByteSource</innerclass>
    <innerclass refid="classio_1_1detail_1_1_asynchronous_reader" prot="public">io::detail::AsynchronousReader</innerclass>
    <innerclass refid="classio_1_1detail_1_1_synchronous_reader" prot="public">io::detail::SynchronousReader</innerclass>
    <innerclass refid="classio_1_1_line_reader" prot="public">io::LineReader</innerclass>
    <innerclass refid="structio_1_1error_1_1with__column__name" prot="public">io::error::with_column_name</innerclass>
    <innerclass refid="structio_1_1error_1_1with__column__content" prot="public">io::error::with_column_content</innerclass>
    <innerclass refid="structio_1_1error_1_1extra__column__in__header" prot="public">io::error::extra_column_in_header</innerclass>
    <innerclass refid="structio_1_1error_1_1missing__column__in__header" prot="public">io::error::missing_column_in_header</innerclass>
    <innerclass refid="structio_1_1error_1_1duplicated__column__in__header" prot="public">io::error::duplicated_column_in_header</innerclass>
    <innerclass refid="structio_1_1error_1_1header__missing" prot="public">io::error::header_missing</innerclass>
    <innerclass refid="structio_1_1error_1_1too__few__columns" prot="public">io::error::too_few_columns</innerclass>
    <innerclass refid="structio_1_1error_1_1too__many__columns" prot="public">io::error::too_many_columns</innerclass>
    <innerclass refid="structio_1_1error_1_1escaped__string__not__closed" prot="public">io::error::escaped_string_not_closed</innerclass>
    <innerclass refid="structio_1_1error_1_1integer__must__be__positive" prot="public">io::error::integer_must_be_positive</innerclass>
    <innerclass refid="structio_1_1error_1_1no__digit" prot="public">io::error::no_digit</innerclass>
    <innerclass refid="structio_1_1error_1_1integer__overflow" prot="public">io::error::integer_overflow</innerclass>
    <innerclass refid="structio_1_1error_1_1integer__underflow" prot="public">io::error::integer_underflow</innerclass>
    <innerclass refid="structio_1_1error_1_1invalid__single__character" prot="public">io::error::invalid_single_character</innerclass>
    <innerclass refid="structio_1_1trim__chars" prot="public">io::trim_chars</innerclass>
    <innerclass refid="structio_1_1no__comment" prot="public">io::no_comment</innerclass>
    <innerclass refid="structio_1_1single__line__comment" prot="public">io::single_line_comment</innerclass>
    <innerclass refid="structio_1_1empty__line__comment" prot="public">io::empty_line_comment</innerclass>
    <innerclass refid="structio_1_1single__and__empty__line__comment" prot="public">io::single_and_empty_line_comment</innerclass>
    <innerclass refid="structio_1_1no__quote__escape" prot="public">io::no_quote_escape</innerclass>
    <innerclass refid="structio_1_1double__quote__escape" prot="public">io::double_quote_escape</innerclass>
    <innerclass refid="structio_1_1throw__on__overflow" prot="public">io::throw_on_overflow</innerclass>
    <innerclass refid="structio_1_1ignore__overflow" prot="public">io::ignore_overflow</innerclass>
    <innerclass refid="structio_1_1set__to__max__on__overflow" prot="public">io::set_to_max_on_overflow</innerclass>
    <innerclass refid="classio_1_1_c_s_v_reader" prot="public">io::CSVReader</innerclass>
    <innernamespace refid="namespaceio">io</innernamespace>
    <innernamespace refid="namespaceio_1_1error">io::error</innernamespace>
    <innernamespace refid="namespaceio_1_1detail">io::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright:<sp/>(2012-2015)<sp/>Ben<sp/>Strasser<sp/>&lt;code@ben-strasser.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License:<sp/>BSD-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CSV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CSV_IO_NO_THREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;condition_variable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cerrno&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;istream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespaceio" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceio" kindref="compound">io</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LineReader<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespaceio_1_1error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">error<sp/>{</highlight></codeline>
<codeline lineno="59" refid="structio_1_1error_1_1base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref><sp/>:<sp/>std::exception<sp/>{</highlight></codeline>
<codeline lineno="60" refid="structio_1_1error_1_1base_1a7d9ff6a31b716a24f056cf8a3e15191d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1base_1a7d9ff6a31b716a24f056cf8a3e15191d" kindref="member">format_error_message</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structio_1_1error_1_1base_1a676fc3d9348e1130f1d343ce4b9187c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structio_1_1error_1_1base_1a676fc3d9348e1130f1d343ce4b9187c1" kindref="member">what</ref>()<sp/>const<sp/>noexcept</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1base_1a7d9ff6a31b716a24f056cf8a3e15191d" kindref="member">format_error_message</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>[2048];</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>only<sp/>affects<sp/>the<sp/>file<sp/>name<sp/>in<sp/>the<sp/>error<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="namespaceio_1_1error_1ac757e93a049ae7a5f23e522933de68e4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1error_1ac757e93a049ae7a5f23e522933de68e4" kindref="member">max_file_name_length</ref><sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structio_1_1error_1_1with__file__name" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref><sp/>{</highlight></codeline>
<codeline lineno="74" refid="structio_1_1error_1_1with__file__name_1aeb0eced36b022e8a00b19727d833067f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structio_1_1error_1_1with__file__name_1aeb0eced36b022e8a00b19727d833067f" kindref="member">with_file_name</ref>()<sp/>{<sp/>std::memset(<ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>));<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structio_1_1error_1_1with__file__name_1ae765de62778c989d4658b4efe2995390" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__file__name_1ae765de62778c989d4658b4efe2995390" kindref="member">set_file_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>call<sp/>to<sp/>strncpy<sp/>has<sp/>parenthesis<sp/>around<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>silence<sp/>the<sp/>GCC<sp/>-Wstringop-truncation<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(strncpy(this-&gt;file_name,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;file_name)));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;file_name[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;<ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>)<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;file_name[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>[<ref refid="namespaceio_1_1error_1ac757e93a049ae7a5f23e522933de68e4" kindref="member">max_file_name_length</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structio_1_1error_1_1with__file__line" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1with__file__line" kindref="compound">with_file_line</ref><sp/>{</highlight></codeline>
<codeline lineno="91" refid="structio_1_1error_1_1with__file__line_1a742ad5e6a169a7972c908f606a28ab4e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structio_1_1error_1_1with__file__line_1a742ad5e6a169a7972c908f606a28ab4e" kindref="member">with_file_line</ref>()<sp/>{<sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref><sp/>=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="structio_1_1error_1_1with__file__line_1aa92778a81778abc676ec6ee9952bba8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__file__line_1aa92778a81778abc676ec6ee9952bba8c" kindref="member">set_file_line</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>)<sp/>{<sp/>this-&gt;file_line<sp/>=<sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structio_1_1error_1_1with__errno" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1with__errno" kindref="compound">with_errno</ref><sp/>{</highlight></codeline>
<codeline lineno="99" refid="structio_1_1error_1_1with__errno_1a32a76a42097cfdfb2793511082eb0f93" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structio_1_1error_1_1with__errno_1a32a76a42097cfdfb2793511082eb0f93" kindref="member">with_errno</ref>()<sp/>{<sp/><ref refid="structio_1_1error_1_1with__errno_1a99dcacba02cb53351fe64d7e064406be" kindref="member">errno_value</ref><sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structio_1_1error_1_1with__errno_1a572cfa4b4a96792cd1d17dc9ad2eb5a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__errno_1a572cfa4b4a96792cd1d17dc9ad2eb5a9" kindref="member">set_errno</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__errno_1a99dcacba02cb53351fe64d7e064406be" kindref="member">errno_value</ref>)<sp/>{<sp/>this-&gt;errno_value<sp/>=<sp/><ref refid="structio_1_1error_1_1with__errno_1a99dcacba02cb53351fe64d7e064406be" kindref="member">errno_value</ref>;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structio_1_1error_1_1with__errno_1a99dcacba02cb53351fe64d7e064406be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__errno_1a99dcacba02cb53351fe64d7e064406be" kindref="member">errno_value</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="structio_1_1error_1_1can__not__open__file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1can__not__open__file" kindref="compound">can_not_open_file</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__errno" kindref="compound">with_errno</ref><sp/>{</highlight></codeline>
<codeline lineno="107" refid="structio_1_1error_1_1can__not__open__file_1a60abbeaffed9d0a354cfff5bccfab1d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1can__not__open__file_1a60abbeaffed9d0a354cfff5bccfab1d6" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structio_1_1error_1_1with__errno_1a99dcacba02cb53351fe64d7e064406be" kindref="member">errno_value</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::snprintf(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can<sp/>not<sp/>open<sp/>file<sp/>\&quot;%s\&quot;<sp/>because<sp/>\&quot;%s\&quot;.&quot;</highlight><highlight class="normal">,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::strerror(<ref refid="structio_1_1error_1_1with__errno_1a99dcacba02cb53351fe64d7e064406be" kindref="member">errno_value</ref>));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::snprintf(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can<sp/>not<sp/>open<sp/>file<sp/>\&quot;%s\&quot;.&quot;</highlight><highlight class="normal">,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structio_1_1error_1_1line__length__limit__exceeded" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1line__length__limit__exceeded" kindref="compound">line_length_limit_exceeded</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__line" kindref="compound">with_file_line</ref><sp/>{</highlight></codeline>
<codeline lineno="119" refid="structio_1_1error_1_1line__length__limit__exceeded_1a4d514daa0b72c8b3f147699c42245eb6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1line__length__limit__exceeded_1a4d514daa0b72c8b3f147699c42245eb6" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Line<sp/>number<sp/>%d<sp/>in<sp/>file<sp/>\&quot;%s\&quot;<sp/>exceeds<sp/>the<sp/>maximum<sp/>length<sp/>of<sp/>2^24-1.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">};</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classio_1_1_byte_source_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classio_1_1_byte_source_base" kindref="compound">ByteSourceBase</ref><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130" refid="classio_1_1_byte_source_base_1a9598bcc869b79e44da07f0e6fa478615" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_byte_source_base_1a9598bcc869b79e44da07f0e6fa478615" kindref="member">read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131" refid="classio_1_1_byte_source_base_1ac3228fe608b3268e49c2243d668d6efd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_byte_source_base_1ac3228fe608b3268e49c2243d668d6efd" kindref="member">~ByteSourceBase</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="namespaceio_1_1detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base" kindref="compound">OwningStdIOByteSourceBase</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_byte_source_base" kindref="compound">ByteSourceBase</ref><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138" refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base_1a259f77d1a3c57720b54b88d9f8a3c018" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base_1a259f77d1a3c57720b54b88d9f8a3c018" kindref="member">OwningStdIOByteSourceBase</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">FILE</ref><sp/>*file)<sp/>:<sp/>file(file)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>std<sp/>library<sp/>that<sp/>we<sp/>want<sp/>to<sp/>do<sp/>the<sp/>buffering<sp/>ourself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::setvbuf(file,<sp/>0,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">_IONBF</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base_1a9269e7bfd07ebf2fa3518912fe7bebd0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base_1a9269e7bfd07ebf2fa3518912fe7bebd0" kindref="member">read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">size</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fread(buffer,<sp/>1,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">size</ref>,<sp/>file);<sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base_1accecf70a8e958d44b0adf4211a775452" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base_1accecf70a8e958d44b0adf4211a775452" kindref="member">~OwningStdIOByteSourceBase</ref>()<sp/>{<sp/>std::fclose(file);<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">FILE</ref><sp/>*file;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source" kindref="compound">NonOwningIStreamByteSource</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_byte_source_base" kindref="compound">ByteSourceBase</ref><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153" refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source_1aacb55ba2f52ba1c30810697d6aa92169" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source_1aacb55ba2f52ba1c30810697d6aa92169" kindref="member">NonOwningIStreamByteSource</ref>(std::istream<sp/>&amp;in)<sp/>:<sp/>in(in)<sp/>{}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source_1ac7b1968c8314896d7ec0ebb97fdda30d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source_1ac7b1968c8314896d7ec0ebb97fdda30d" kindref="member">read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>in.read(buffer,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in.gcount();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source_1a74a5a592a35640f3b2c5694ca509bec7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source_1a74a5a592a35640f3b2c5694ca509bec7" kindref="member">~NonOwningIStreamByteSource</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>std::istream<sp/>&amp;in;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classio_1_1detail_1_1_non_owning_string_byte_source" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classio_1_1detail_1_1_non_owning_string_byte_source" kindref="compound">NonOwningStringByteSource</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_byte_source_base" kindref="compound">ByteSourceBase</ref><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168" refid="classio_1_1detail_1_1_non_owning_string_byte_source_1a8fd604017b38e20f90386b6e10bd95a3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1detail_1_1_non_owning_string_byte_source_1a8fd604017b38e20f90386b6e10bd95a3" kindref="member">NonOwningStringByteSource</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>str(str),<sp/>remaining_byte_count(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">size</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classio_1_1detail_1_1_non_owning_string_byte_source_1aba194be7e3a141f40d683db483a620bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_non_owning_string_byte_source_1aba194be7e3a141f40d683db483a620bb" kindref="member">read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_byte_count)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">to_copy_byte_count</ref><sp/>=<sp/>desired_byte_count;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining_byte_count<sp/>&lt;<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">to_copy_byte_count</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">to_copy_byte_count</ref><sp/>=<sp/>remaining_byte_count;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(buffer,<sp/>str,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">to_copy_byte_count</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>remaining_byte_count<sp/>-=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">to_copy_byte_count</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>+=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">to_copy_byte_count</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">to_copy_byte_count</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classio_1_1detail_1_1_non_owning_string_byte_source_1aa727fc8845a570b7a7a2367da3fe0adf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1detail_1_1_non_owning_string_byte_source_1aa727fc8845a570b7a7a2367da3fe0adf" kindref="member">~NonOwningStringByteSource</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>remaining_byte_count;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CSV_IO_NO_THREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classio_1_1detail_1_1_asynchronous_reader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classio_1_1detail_1_1_asynchronous_reader" kindref="compound">AsynchronousReader</ref><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191" refid="classio_1_1detail_1_1_asynchronous_reader_1a6ef8780dae9b0b24b78d64934bc7a652" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_asynchronous_reader_1a6ef8780dae9b0b24b78d64934bc7a652" kindref="member">init</ref>(std::unique_ptr&lt;ByteSourceBase&gt;<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_byte_source</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">guard</ref>(lock);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>byte_source<sp/>=<sp/>std::move(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_byte_source</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>desired_byte_count<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>termination_requested<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>worker<sp/>=<sp/>std::thread([&amp;]<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">guard</ref>(lock);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_requested_condition.wait(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">guard</ref>,<sp/>[&amp;]<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desired_byte_count<sp/>!=<sp/>-1<sp/>||<sp/>termination_requested;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(termination_requested)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_byte_count<sp/>=<sp/>byte_source-&gt;read(buffer,<sp/>desired_byte_count);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desired_byte_count<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_byte_count<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_finished_condition.notify_one();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_error<sp/>=<sp/>std::current_exception();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>read_finished_condition.notify_one();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classio_1_1detail_1_1_asynchronous_reader_1ab6b6f8483008208fc3f529f94c7125e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_asynchronous_reader_1ab6b6f8483008208fc3f529f94c7125e2" kindref="member">is_valid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>byte_source<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classio_1_1detail_1_1_asynchronous_reader_1a9818851dbb994042d0d84183220e71c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_asynchronous_reader_1a9818851dbb994042d0d84183220e71c6" kindref="member">start_read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_desired_byte_count</ref>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">guard</ref>(lock);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_buffer</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>desired_byte_count<sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_desired_byte_count</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>read_byte_count<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>read_requested_condition.notify_one();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classio_1_1detail_1_1_asynchronous_reader_1a94520530423e9bfeb04c23ea4e3a8786" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_asynchronous_reader_1a94520530423e9bfeb04c23ea4e3a8786" kindref="member">finish_read</ref>()<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">guard</ref>(lock);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>read_finished_condition.wait(</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">guard</ref>,<sp/>[&amp;]<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_byte_count<sp/>!=<sp/>-1<sp/>||<sp/>read_error;<sp/>});</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_error)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(read_error);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_byte_count;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classio_1_1detail_1_1_asynchronous_reader_1a284dd807219eb954c35de4379822c02b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1detail_1_1_asynchronous_reader_1a284dd807219eb954c35de4379822c02b" kindref="member">~AsynchronousReader</ref>()<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte_source<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">guard</ref>(lock);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>termination_requested<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>read_requested_condition.notify_one();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>worker.join();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ByteSourceBase&gt;<sp/>byte_source;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>std::thread<sp/>worker;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>termination_requested;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>std::exception_ptr<sp/>read_error;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_byte_count;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_byte_count;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>std::mutex<sp/>lock;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>std::condition_variable<sp/>read_finished_condition;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>std::condition_variable<sp/>read_requested_condition;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classio_1_1detail_1_1_synchronous_reader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classio_1_1detail_1_1_synchronous_reader" kindref="compound">SynchronousReader</ref><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="269" refid="classio_1_1detail_1_1_synchronous_reader_1ac4a6ee3128ca582e9e1d43e442d3efdf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_synchronous_reader_1ac4a6ee3128ca582e9e1d43e442d3efdf" kindref="member">init</ref>(std::unique_ptr&lt;ByteSourceBase&gt;<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_byte_source</ref>)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>byte_source<sp/>=<sp/>std::move(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_byte_source</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classio_1_1detail_1_1_synchronous_reader_1a9d6b2c888cc7020df1bb81c8bb5c58bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_synchronous_reader_1a9d6b2c888cc7020df1bb81c8bb5c58bc" kindref="member">is_valid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>byte_source<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classio_1_1detail_1_1_synchronous_reader_1a6cad1371b97e14f660914898b16433c4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_synchronous_reader_1a6cad1371b97e14f660914898b16433c4" kindref="member">start_read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_desired_byte_count</ref>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_buffer</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>desired_byte_count<sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">arg_desired_byte_count</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classio_1_1detail_1_1_synchronous_reader_1a519a0cb25c641d2e51b6542749c44606" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_synchronous_reader_1a519a0cb25c641d2e51b6542749c44606" kindref="member">finish_read</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>byte_source-&gt;read(buffer,<sp/>desired_byte_count);<sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ByteSourceBase&gt;<sp/>byte_source;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_byte_count;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">};</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classio_1_1_line_reader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classio_1_1_line_reader" kindref="compound">LineReader</ref><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_len<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>20;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;char[]&gt;<sp/>buffer;<sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>constructed<sp/>before<sp/>(and<sp/>thus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destructed<sp/>after)<sp/>the<sp/>reader!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CSV_IO_NO_THREAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1detail_1_1_synchronous_reader" kindref="compound">detail::SynchronousReader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1detail_1_1_asynchronous_reader" kindref="compound">detail::AsynchronousReader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_begin;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_end;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>file_name[<ref refid="namespaceio_1_1error_1ac757e93a049ae7a5f23e522933de68e4" kindref="member">error::max_file_name_length</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>file_line;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;ByteSourceBase&gt;<sp/>open_file(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>open<sp/>the<sp/>file<sp/>in<sp/>binary<sp/>mode<sp/>as<sp/>it<sp/>makes<sp/>no<sp/>difference<sp/>under<sp/>*nix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>under<sp/>Windows<sp/>we<sp/>handle<sp/>\r\n<sp/>newlines<sp/>ourself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*file<sp/>=<sp/>std::fopen(file_name,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>errno;<sp/></highlight><highlight class="comment">//<sp/>store<sp/>errno<sp/>as<sp/>soon<sp/>as<sp/>possible,<sp/>doing<sp/>it<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructor<sp/>call<sp/>can<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1can__not__open__file" kindref="compound">error::can_not_open_file</ref><sp/>err;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err.<ref refid="structio_1_1error_1_1with__errno_1a572cfa4b4a96792cd1d17dc9ad2eb5a9" kindref="member">set_errno</ref>(x);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err.<ref refid="structio_1_1error_1_1with__file__name_1ae765de62778c989d4658b4efe2995390" kindref="member">set_file_name</ref>(file_name);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;ByteSourceBase&gt;(</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base" kindref="compound">detail::OwningStdIOByteSourceBase</ref>(file));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(std::unique_ptr&lt;ByteSourceBase&gt;<sp/>byte_source)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>file_line<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>std::unique_ptr&lt;char[]&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[3<sp/>*<sp/>block_len]);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>data_begin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>data_end<sp/>=<sp/>byte_source-&gt;read(buffer.get(),<sp/>2<sp/>*<sp/>block_len);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>UTF-8<sp/>BOM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_end<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>buffer[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;\xEF&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buffer[1]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;\xBB&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[2]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;\xBF&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_begin<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_end<sp/>==<sp/>2<sp/>*<sp/>block_len)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="classio_1_1detail_1_1_synchronous_reader_1ac4a6ee3128ca582e9e1d43e442d3efdf" kindref="member">init</ref>(std::move(byte_source));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="classio_1_1detail_1_1_synchronous_reader_1a6cad1371b97e14f660914898b16433c4" kindref="member">start_read</ref>(buffer.get()<sp/>+<sp/>2<sp/>*<sp/>block_len,<sp/>block_len);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="340" refid="classio_1_1_line_reader_1abd9f13fb1d3f5d36857dec0a1d1bde6c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader_1abd9f13fb1d3f5d36857dec0a1d1bde6c" kindref="member">LineReader</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341" refid="classio_1_1_line_reader_1a84f2957de769bb701eaaddfd8bc004dd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader_1a84f2957de769bb701eaaddfd8bc004dd" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_line_reader" kindref="compound">LineReader</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342" refid="classio_1_1_line_reader_1a284f7970473d13bc32a0c618b313043e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader" kindref="compound">LineReader</ref><sp/>&amp;<ref refid="classio_1_1_line_reader_1a284f7970473d13bc32a0c618b313043e" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_line_reader" kindref="compound">LineReader</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="classio_1_1_line_reader_1a81a75d3f53725d35822f490007520e29" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_line_reader_1a81a75d3f53725d35822f490007520e29" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>init(open_file(file_name));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="classio_1_1_line_reader_1ab0eb26f44fa6b18f9c39dfb2561ac882" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_line_reader_1ab0eb26f44fa6b18f9c39dfb2561ac882" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;file_name)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name.c_str());</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>init(open_file(file_name.c_str()));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="classio_1_1_line_reader_1a2d30e0770f33beeb2b45643dfd629c3a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader_1a2d30e0770f33beeb2b45643dfd629c3a" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ByteSourceBase&gt;<sp/>byte_source)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>init(std::move(byte_source));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classio_1_1_line_reader_1a786bde1b46d6ae5ade1492e9015e42b0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader_1a786bde1b46d6ae5ade1492e9015e42b0" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;file_name,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ByteSourceBase&gt;<sp/>byte_source)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name.c_str());</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>init(std::move(byte_source));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="classio_1_1_line_reader_1ad5a65d6f23474884061a77ea858c042b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader_1ad5a65d6f23474884061a77ea858c042b" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data_begin,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data_end)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>init(std::unique_ptr&lt;ByteSourceBase&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_non_owning_string_byte_source" kindref="compound">detail::NonOwningStringByteSource</ref>(</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_begin,<sp/>data_end<sp/>-<sp/>data_begin)));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classio_1_1_line_reader_1a0a52d864b46442a253443cac1367366e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader_1a0a52d864b46442a253443cac1367366e" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;file_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data_begin,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data_end)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name.c_str());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>init(std::unique_ptr&lt;ByteSourceBase&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_non_owning_string_byte_source" kindref="compound">detail::NonOwningStringByteSource</ref>(</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_begin,<sp/>data_end<sp/>-<sp/>data_begin)));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="classio_1_1_line_reader_1ad2a8943ba0848ae5052e2f5ad30c010e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader_1ad2a8943ba0848ae5052e2f5ad30c010e" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,<sp/>FILE<sp/>*file)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>init(std::unique_ptr&lt;ByteSourceBase&gt;(</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base" kindref="compound">detail::OwningStdIOByteSourceBase</ref>(file)));</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="classio_1_1_line_reader_1a93fa2e3ae98b0e7a7391714d6395c552" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader_1a93fa2e3ae98b0e7a7391714d6395c552" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;file_name,<sp/>FILE<sp/>*file)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name.c_str());</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>init(std::unique_ptr&lt;ByteSourceBase&gt;(</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_owning_std_i_o_byte_source_base" kindref="compound">detail::OwningStdIOByteSourceBase</ref>(file)));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="classio_1_1_line_reader_1a301c08eb9ca5d3fdccf4e9a8e5ac82f8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader_1a301c08eb9ca5d3fdccf4e9a8e5ac82f8" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,<sp/>std::istream<sp/>&amp;in)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>init(std::unique_ptr&lt;ByteSourceBase&gt;(</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source" kindref="compound">detail::NonOwningIStreamByteSource</ref>(in)));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="classio_1_1_line_reader_1a3eacf4d1539a24122c6897fce4e72f06" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader_1a3eacf4d1539a24122c6897fce4e72f06" kindref="member">LineReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;file_name,<sp/>std::istream<sp/>&amp;in)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name.c_str());</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>init(std::unique_ptr&lt;ByteSourceBase&gt;(</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classio_1_1detail_1_1_non_owning_i_stream_byte_source" kindref="compound">detail::NonOwningIStreamByteSource</ref>(in)));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;file_name)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name.c_str());</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="classio_1_1_line_reader_1a81c56ac68497da5ec874333ce063fd83" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_line_reader_1a81c56ac68497da5ec874333ce063fd83" kindref="member">set_file_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_name<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(this-&gt;file_name,<sp/>file_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;file_name));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;file_name[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;file_name)<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;file_name[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classio_1_1_line_reader_1a9279e6a30a85061167ecd50e20c5a10e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classio_1_1_line_reader_1a9279e6a30a85061167ecd50e20c5a10e" kindref="member">get_truncated_file_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file_name;<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="classio_1_1_line_reader_1a581b55d4ced6adb964de50fa8ac6eb08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_line_reader_1a581b55d4ced6adb964de50fa8ac6eb08" kindref="member">set_file_line</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>file_line)<sp/>{<sp/>this-&gt;file_line<sp/>=<sp/>file_line;<sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="classio_1_1_line_reader_1a3f3459e22ed8e459238c290050b6722e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_line_reader_1a3f3459e22ed8e459238c290050b6722e" kindref="member">get_file_line</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file_line;<sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="classio_1_1_line_reader_1a09a64339a84ceeb09f9a1249beacca15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classio_1_1_line_reader_1a09a64339a84ceeb09f9a1249beacca15" kindref="member">next_line</ref>()<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_begin<sp/>==<sp/>data_end)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>++file_line;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(data_begin<sp/>&lt;<sp/>data_end);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(data_end<sp/>&lt;=<sp/>block_len<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_begin<sp/>&gt;=<sp/>block_len)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(buffer.get(),<sp/>buffer.get()<sp/>+<sp/>block_len,<sp/>block_len);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_begin<sp/>-=<sp/>block_len;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_end<sp/>-=<sp/>block_len;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader.<ref refid="classio_1_1detail_1_1_synchronous_reader_1a9d6b2c888cc7020df1bb81c8bb5c58bc" kindref="member">is_valid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_end<sp/>+=<sp/>reader.<ref refid="classio_1_1detail_1_1_synchronous_reader_1a519a0cb25c641d2e51b6542749c44606" kindref="member">finish_read</ref>();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(buffer.get()<sp/>+<sp/>block_len,<sp/>buffer.get()<sp/>+<sp/>2<sp/>*<sp/>block_len,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_len);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="classio_1_1detail_1_1_synchronous_reader_1a6cad1371b97e14f660914898b16433c4" kindref="member">start_read</ref>(buffer.get()<sp/>+<sp/>2<sp/>*<sp/>block_len,<sp/>block_len);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_end<sp/>=<sp/>data_begin;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(line_end<sp/>!=<sp/>data_end<sp/>&amp;&amp;<sp/>buffer[line_end]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++line_end;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_end<sp/>-<sp/>data_begin<sp/>+<sp/>1<sp/>&gt;<sp/>block_len)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1line__length__limit__exceeded" kindref="compound">error::line_length_limit_exceeded</ref><sp/>err;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err.<ref refid="structio_1_1error_1_1with__file__name_1ae765de62778c989d4658b4efe2995390" kindref="member">set_file_name</ref>(file_name);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err.<ref refid="structio_1_1error_1_1with__file__line_1aa92778a81778abc676ec6ee9952bba8c" kindref="member">set_file_line</ref>(file_line);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_end<sp/>!=<sp/>data_end<sp/>&amp;&amp;<sp/>buffer[line_end]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[line_end]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>files<sp/>are<sp/>missing<sp/>the<sp/>newline<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++data_end;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[line_end]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>windows<sp/>\r\n-line<sp/>breaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_end<sp/>!=<sp/>data_begin<sp/>&amp;&amp;<sp/>buffer[line_end<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[line_end<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ret<sp/>=<sp/>buffer.get()<sp/>+<sp/>data_begin;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>data_begin<sp/>=<sp/>line_end<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal">};</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CSV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">error<sp/>{</highlight></codeline>
<codeline lineno="480" refid="namespaceio_1_1error_1ae17181bae477fe72ddad096b6b1d6963" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1error_1ae17181bae477fe72ddad096b6b1d6963" kindref="member">max_column_name_length</ref><sp/>=<sp/>63;</highlight></codeline>
<codeline lineno="481" refid="structio_1_1error_1_1with__column__name" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1with__column__name" kindref="compound">with_column_name</ref><sp/>{</highlight></codeline>
<codeline lineno="482" refid="structio_1_1error_1_1with__column__name_1a07d04d38dc87e6b20d2371695a3229c7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structio_1_1error_1_1with__column__name_1a07d04d38dc87e6b20d2371695a3229c7" kindref="member">with_column_name</ref>()<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memset(<ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>,<sp/>0,<sp/><ref refid="namespaceio_1_1error_1ae17181bae477fe72ddad096b6b1d6963" kindref="member">max_column_name_length</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="structio_1_1error_1_1with__column__name_1a2a8144d3591a4bb618368ca7261befef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__column__name_1a2a8144d3591a4bb618368ca7261befef" kindref="member">set_column_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::strncpy(this-&gt;column_name,<sp/><ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>,<sp/><ref refid="namespaceio_1_1error_1ae17181bae477fe72ddad096b6b1d6963" kindref="member">max_column_name_length</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;column_name[<ref refid="namespaceio_1_1error_1ae17181bae477fe72ddad096b6b1d6963" kindref="member">max_column_name_length</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;column_name[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>[<ref refid="namespaceio_1_1error_1ae17181bae477fe72ddad096b6b1d6963" kindref="member">max_column_name_length</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="496"><highlight class="normal">};</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="namespaceio_1_1error_1a5a641f4f0837f4c94416e05461a62749" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1error_1a5a641f4f0837f4c94416e05461a62749" kindref="member">max_column_content_length</ref><sp/>=<sp/>63;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="structio_1_1error_1_1with__column__content" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1with__column__content" kindref="compound">with_column_content</ref><sp/>{</highlight></codeline>
<codeline lineno="501" refid="structio_1_1error_1_1with__column__content_1aca754ef952be5ff4fcfe51ccb57ab66d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content_1aca754ef952be5ff4fcfe51ccb57ab66d" kindref="member">with_column_content</ref>()<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memset(<ref refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" kindref="member">column_content</ref>,<sp/>0,<sp/><ref refid="namespaceio_1_1error_1a5a641f4f0837f4c94416e05461a62749" kindref="member">max_column_content_length</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="structio_1_1error_1_1with__column__content_1ae7375310dc02425cb3cc4115b3ac8d6a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__column__content_1ae7375310dc02425cb3cc4115b3ac8d6a" kindref="member">set_column_content</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" kindref="member">column_content</ref>)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" kindref="member">column_content</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::strncpy(this-&gt;column_content,<sp/><ref refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" kindref="member">column_content</ref>,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1error_1a5a641f4f0837f4c94416e05461a62749" kindref="member">max_column_content_length</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;column_content[<ref refid="namespaceio_1_1error_1a5a641f4f0837f4c94416e05461a62749" kindref="member">max_column_content_length</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;column_content[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" kindref="member">column_content</ref>[<ref refid="namespaceio_1_1error_1a5a641f4f0837f4c94416e05461a62749" kindref="member">max_column_content_length</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="516"><highlight class="normal">};</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="structio_1_1error_1_1extra__column__in__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1extra__column__in__header" kindref="compound">extra_column_in_header</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__column__name" kindref="compound">with_column_name</ref><sp/>{</highlight></codeline>
<codeline lineno="519" refid="structio_1_1error_1_1extra__column__in__header_1a10fb0fe8533ea372c4055dd64f7fa01d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1extra__column__in__header_1a10fb0fe8533ea372c4055dd64f7fa01d" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(Extra<sp/>column<sp/>&quot;%s&quot;<sp/>in<sp/>header<sp/>of<sp/>file<sp/>&quot;%s&quot;.)&quot;,<sp/><ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>,</highlight></codeline>
<codeline lineno="522"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="525"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="526" refid="structio_1_1error_1_1missing__column__in__header" refkind="compound"><highlight class="stringliteral"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1missing__column__in__header" kindref="compound">missing_column_in_header</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__column__name" kindref="compound">with_column_name</ref><sp/>{</highlight></codeline>
<codeline lineno="527" refid="structio_1_1error_1_1missing__column__in__header_1a9c1f09597f9d51865d780d4d8bf851d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1missing__column__in__header_1a9c1f09597f9d51865d780d4d8bf851d7" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(Missing<sp/>column<sp/>&quot;%s&quot;<sp/>in<sp/>header<sp/>of<sp/>file<sp/>&quot;%s&quot;.)&quot;,<sp/><ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>,</highlight></codeline>
<codeline lineno="530"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="533"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="534" refid="structio_1_1error_1_1duplicated__column__in__header" refkind="compound"><highlight class="stringliteral"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1duplicated__column__in__header" kindref="compound">duplicated_column_in_header</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__column__name" kindref="compound">with_column_name</ref><sp/>{</highlight></codeline>
<codeline lineno="535" refid="structio_1_1error_1_1duplicated__column__in__header_1ab08c387e87384836fe5bb03823298c60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1duplicated__column__in__header_1ab08c387e87384836fe5bb03823298c60" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(Duplicated<sp/>column<sp/>&quot;%s&quot;<sp/>in<sp/>header<sp/>of<sp/>file<sp/>&quot;%s&quot;.)&quot;,</highlight></codeline>
<codeline lineno="538"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="541"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="542" refid="structio_1_1error_1_1header__missing" refkind="compound"><highlight class="stringliteral"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1header__missing" kindref="compound">header_missing</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref><sp/>{</highlight></codeline>
<codeline lineno="543" refid="structio_1_1error_1_1header__missing_1aa070a7455a7f3ff10eeec9e373cfb6e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1header__missing_1aa070a7455a7f3ff10eeec9e373cfb6e9" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Header<sp/>missing<sp/>in<sp/>file<sp/>\&quot;%s\&quot;.&quot;</highlight><highlight class="normal">,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal">};</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="structio_1_1error_1_1too__few__columns" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1too__few__columns" kindref="compound">too_few_columns</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__line" kindref="compound">with_file_line</ref><sp/>{</highlight></codeline>
<codeline lineno="550" refid="structio_1_1error_1_1too__few__columns_1a71e5735dd9994d4eabfc0bcbc49fef90" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1too__few__columns_1a71e5735dd9994d4eabfc0bcbc49fef90" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>few<sp/>columns<sp/>in<sp/>line<sp/>%d<sp/>in<sp/>file<sp/>\&quot;%s\&quot;.&quot;</highlight><highlight class="normal">,<sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal">};</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="structio_1_1error_1_1too__many__columns" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1too__many__columns" kindref="compound">too_many_columns</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__line" kindref="compound">with_file_line</ref><sp/>{</highlight></codeline>
<codeline lineno="558" refid="structio_1_1error_1_1too__many__columns_1afed8f8e98adc46965e649f0ea2484867" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1too__many__columns_1afed8f8e98adc46965e649f0ea2484867" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>columns<sp/>in<sp/>line<sp/>%d<sp/>in<sp/>file<sp/>\&quot;%s\&quot;.&quot;</highlight><highlight class="normal">,<sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal">};</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="structio_1_1error_1_1escaped__string__not__closed" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1escaped__string__not__closed" kindref="compound">escaped_string_not_closed</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__line" kindref="compound">with_file_line</ref><sp/>{</highlight></codeline>
<codeline lineno="566" refid="structio_1_1error_1_1escaped__string__not__closed_1a866af460ae3e64656b15a6cad91fc48a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1escaped__string__not__closed_1a866af460ae3e64656b15a6cad91fc48a" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Escaped<sp/>string<sp/>was<sp/>not<sp/>closed<sp/>in<sp/>line<sp/>%d<sp/>in<sp/>file<sp/>\&quot;%s\&quot;.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal">};</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="structio_1_1error_1_1integer__must__be__positive" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1integer__must__be__positive" kindref="compound">integer_must_be_positive</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__line" kindref="compound">with_file_line</ref>,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__name" kindref="compound">with_column_name</ref>,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content" kindref="compound">with_column_content</ref><sp/>{</highlight></codeline>
<codeline lineno="578" refid="structio_1_1error_1_1integer__must__be__positive_1ac10ca4340da4f698a4541e0d793a804d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1integer__must__be__positive_1ac10ca4340da4f698a4541e0d793a804d" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(The<sp/>integer<sp/>&quot;%s&quot;<sp/>must<sp/>be<sp/>positive<sp/>or<sp/>0<sp/>in<sp/>column<sp/>&quot;%s&quot;<sp/>in<sp/>file<sp/>&quot;%s&quot;<sp/>in<sp/>line<sp/>&quot;%d&quot;.)&quot;,</highlight></codeline>
<codeline lineno="582"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" kindref="member">column_content</ref>,<sp/><ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="585"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="586" refid="structio_1_1error_1_1no__digit" refkind="compound"><highlight class="stringliteral"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1no__digit" kindref="compound">no_digit</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__line" kindref="compound">with_file_line</ref>,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__name" kindref="compound">with_column_name</ref>,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content" kindref="compound">with_column_content</ref><sp/>{</highlight></codeline>
<codeline lineno="591" refid="structio_1_1error_1_1no__digit_1a32f2d2e2999496a43aae503f020234b1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1no__digit_1a32f2d2e2999496a43aae503f020234b1" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(The<sp/>integer<sp/>&quot;%s&quot;<sp/>contains<sp/>an<sp/>invalid<sp/>digit<sp/>in<sp/>column<sp/>&quot;%s&quot;<sp/>in<sp/>file<sp/>&quot;%s&quot;<sp/>in<sp/>line<sp/>&quot;%d&quot;.)&quot;,</highlight></codeline>
<codeline lineno="595"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" kindref="member">column_content</ref>,<sp/><ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="598"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="599" refid="structio_1_1error_1_1integer__overflow" refkind="compound"><highlight class="stringliteral"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1integer__overflow" kindref="compound">integer_overflow</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__line" kindref="compound">with_file_line</ref>,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__name" kindref="compound">with_column_name</ref>,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content" kindref="compound">with_column_content</ref><sp/>{</highlight></codeline>
<codeline lineno="604" refid="structio_1_1error_1_1integer__overflow_1a218d1e50166239ef963b7349a11c0221" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1integer__overflow_1a218d1e50166239ef963b7349a11c0221" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(The<sp/>integer<sp/>&quot;%s&quot;<sp/>overflows<sp/>in<sp/>column<sp/>&quot;%s&quot;<sp/>in<sp/>file<sp/>&quot;%s&quot;<sp/>in<sp/>line<sp/>&quot;%d&quot;.)&quot;,</highlight></codeline>
<codeline lineno="608"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" kindref="member">column_content</ref>,<sp/><ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>);</highlight></codeline>
<codeline lineno="609"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="611"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="612" refid="structio_1_1error_1_1integer__underflow" refkind="compound"><highlight class="stringliteral"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1integer__underflow" kindref="compound">integer_underflow</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__line" kindref="compound">with_file_line</ref>,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__name" kindref="compound">with_column_name</ref>,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content" kindref="compound">with_column_content</ref><sp/>{</highlight></codeline>
<codeline lineno="617" refid="structio_1_1error_1_1integer__underflow_1a007866fe0a8e8111cac2d06ff37b6400" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1integer__underflow_1a007866fe0a8e8111cac2d06ff37b6400" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(The<sp/>integer<sp/>&quot;%s&quot;<sp/>underflows<sp/>in<sp/>column<sp/>&quot;%s&quot;<sp/>in<sp/>file<sp/>&quot;%s&quot;<sp/>in<sp/>line<sp/>&quot;%d&quot;.)&quot;,</highlight></codeline>
<codeline lineno="621"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" kindref="member">column_content</ref>,<sp/><ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>);</highlight></codeline>
<codeline lineno="622"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="624"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="625" refid="structio_1_1error_1_1invalid__single__character" refkind="compound"><highlight class="stringliteral"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1error_1_1invalid__single__character" kindref="compound">invalid_single_character</ref><sp/>:<sp/><ref refid="structio_1_1error_1_1base" kindref="compound">base</ref>,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__name" kindref="compound">with_file_name</ref>,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__file__line" kindref="compound">with_file_line</ref>,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__name" kindref="compound">with_column_name</ref>,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content" kindref="compound">with_column_content</ref><sp/>{</highlight></codeline>
<codeline lineno="630" refid="structio_1_1error_1_1invalid__single__character_1aae79403ba8d6d088262b3f3419dd061a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1invalid__single__character_1aae79403ba8d6d088262b3f3419dd061a" kindref="member">format_error_message</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>std::snprintf(</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structio_1_1error_1_1base_1a3ca424e883ceb4405edf12b8bf974610" kindref="member">error_message_buffer</ref>),</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;(The<sp/>content<sp/>&quot;%s&quot;<sp/>of<sp/>column<sp/>&quot;%s&quot;<sp/>in<sp/>file<sp/>&quot;%s&quot;<sp/>in<sp/>line<sp/>&quot;%d&quot;<sp/>is<sp/>not<sp/>a<sp/>single<sp/>character.)&quot;,</highlight></codeline>
<codeline lineno="634"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1with__column__content_1a8587779769fbfb40155abb362137a523" kindref="member">column_content</ref>,<sp/><ref refid="structio_1_1error_1_1with__column__name_1af40ba00f1f035d363b099baf1f724323" kindref="member">column_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__name_1ac957d5590a8b95517b74eb5bf373a424" kindref="member">file_name</ref>,<sp/><ref refid="structio_1_1error_1_1with__file__line_1a391298c37172bcdb83aeb3daf65d5a0e" kindref="member">file_line</ref>);</highlight></codeline>
<codeline lineno="635"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="637"><highlight class="stringliteral">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="namespaceio_1aa04154e5c37e292c5acc7533d28a9da7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespaceio_1aa04154e5c37e292c5acc7533d28a9da7" kindref="member">ignore_column</ref><sp/>=<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1aa04154e5c37e292c5acc7533d28a9da7" kindref="member">ignore_column</ref><sp/>ignore_no_column<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1aa04154e5c37e292c5acc7533d28a9da7" kindref="member">ignore_column</ref><sp/>ignore_extra_column<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1aa04154e5c37e292c5acc7533d28a9da7" kindref="member">ignore_column</ref><sp/>ignore_missing_column<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="structio_1_1trim__chars" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">...<sp/>trim_char_list&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1trim__chars" kindref="compound">trim_chars</ref><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_trim_char(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>OtherTrimChars&gt;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_trim_char(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>trim_char,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtherTrimChars...<sp/>other_trim_chars)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/>trim_char<sp/>||<sp/>is_trim_char(c,<sp/>other_trim_chars...);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="655" refid="structio_1_1trim__chars_1a4cffc5e839ab4024ca8c8330e26e338c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1trim__chars_1a4cffc5e839ab4024ca8c8330e26e338c" kindref="member">trim</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;str_begin,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;str_end)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str_begin<sp/>!=<sp/>str_end<sp/>&amp;&amp;<sp/>is_trim_char(*str_begin,<sp/>trim_char_list...))</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++str_begin;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str_begin<sp/>!=<sp/>str_end<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_trim_char(*(str_end<sp/>-<sp/>1),<sp/>trim_char_list...))</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--str_end;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>*str_end<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal">};</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="structio_1_1no__comment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1no__comment" kindref="compound">no_comment</ref><sp/>{</highlight></codeline>
<codeline lineno="666" refid="structio_1_1no__comment_1a52b252547482e28edd076ee2224bc8d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structio_1_1no__comment_1a52b252547482e28edd076ee2224bc8d8" kindref="member">is_comment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal">};</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="structio_1_1single__line__comment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">...<sp/>comment_start_char_list&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1single__line__comment" kindref="compound">single_line_comment</ref><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_comment_start_char(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>OtherCommentStartChars&gt;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>is_comment_start_char(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>comment_start_char,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OtherCommentStartChars...<sp/>other_comment_start_chars)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/>comment_start_char<sp/>||</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_comment_start_char(c,<sp/>other_comment_start_chars...);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="682" refid="structio_1_1single__line__comment_1ac4b029bb0efd251505f8e610cc308a92" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structio_1_1single__line__comment_1ac4b029bb0efd251505f8e610cc308a92" kindref="member">is_comment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_comment_start_char(*line,<sp/>comment_start_char_list...);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal">};</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687" refid="structio_1_1empty__line__comment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1empty__line__comment" kindref="compound">empty_line_comment</ref><sp/>{</highlight></codeline>
<codeline lineno="688" refid="structio_1_1empty__line__comment_1a88e2cee044a9aafabf3e2a0e64fa5289" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structio_1_1empty__line__comment_1a88e2cee044a9aafabf3e2a0e64fa5289" kindref="member">is_comment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*line<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*line<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*line<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++line;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*line<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal">};</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">...<sp/>comment_start_char_list&gt;</highlight></codeline>
<codeline lineno="701" refid="structio_1_1single__and__empty__line__comment" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1single__and__empty__line__comment" kindref="compound">single_and_empty_line_comment</ref><sp/>{</highlight></codeline>
<codeline lineno="702" refid="structio_1_1single__and__empty__line__comment_1a93a1556dfe4d7e6e3a674d576c4b30f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structio_1_1single__and__empty__line__comment_1a93a1556dfe4d7e6e3a674d576c4b30f4" kindref="member">is_comment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structio_1_1single__line__comment_1ac4b029bb0efd251505f8e610cc308a92" kindref="member">single_line_comment&lt;comment_start_char_list...&gt;::is_comment</ref>(line)<sp/>||</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1empty__line__comment_1a88e2cee044a9aafabf3e2a0e64fa5289" kindref="member">empty_line_comment::is_comment</ref>(line);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal">};</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="structio_1_1no__quote__escape" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sep&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1no__quote__escape" kindref="compound">no_quote_escape</ref><sp/>{</highlight></codeline>
<codeline lineno="709" refid="structio_1_1no__quote__escape_1a82426f9625e26d22e07e00a6be333156" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structio_1_1no__quote__escape_1a82426f9625e26d22e07e00a6be333156" kindref="member">find_next_column_end</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*col_begin)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*col_begin<sp/>!=<sp/>sep<sp/>&amp;&amp;<sp/>*col_begin<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++col_begin;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>col_begin;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="structio_1_1no__quote__escape_1af1c217f2c995d178a91c58235191b052" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1no__quote__escape_1af1c217f2c995d178a91c58235191b052" kindref="member">unescape</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="716"><highlight class="normal">};</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="structio_1_1double__quote__escape" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sep,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>quote&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1double__quote__escape" kindref="compound">double_quote_escape</ref><sp/>{</highlight></codeline>
<codeline lineno="719" refid="structio_1_1double__quote__escape_1a90bc69b45844ad0bd868b51909640a97" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structio_1_1double__quote__escape_1a90bc69b45844ad0bd868b51909640a97" kindref="member">find_next_column_end</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*col_begin)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*col_begin<sp/>!=<sp/>sep<sp/>&amp;&amp;<sp/>*col_begin<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*col_begin<sp/>!=<sp/>quote)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++col_begin;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++col_begin;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*col_begin<sp/>!=<sp/>quote)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*col_begin<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1escaped__string__not__closed" kindref="compound">error::escaped_string_not_closed</ref>();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++col_begin;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++col_begin;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*col_begin<sp/>==<sp/>quote);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>col_begin;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737" refid="structio_1_1double__quote__escape_1a02e332751916fbdb7b35c238d690e580" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1double__quote__escape_1a02e332751916fbdb7b35c238d690e580" kindref="member">unescape</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;col_begin,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;col_end)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_end<sp/>-<sp/>col_begin<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*col_begin<sp/>==<sp/>quote<sp/>&amp;&amp;<sp/>*(col_end<sp/>-<sp/>1)<sp/>==<sp/>quote)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++col_begin;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--col_end;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out<sp/>=<sp/>col_begin;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in<sp/>=<sp/>col_begin;<sp/>in<sp/>!=<sp/>col_end;<sp/>++in)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*in<sp/>==<sp/>quote<sp/>&amp;&amp;<sp/>(in<sp/>+<sp/>1)<sp/>!=<sp/>col_end<sp/>&amp;&amp;<sp/>*(in<sp/>+<sp/>1)<sp/>==<sp/>quote)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++in;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out<sp/>=<sp/>*in;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++out;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_end<sp/>=<sp/>out;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*col_end<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal">};</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="structio_1_1throw__on__overflow" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1throw__on__overflow" kindref="compound">throw_on_overflow</ref><sp/>{</highlight></codeline>
<codeline lineno="758" refid="structio_1_1throw__on__overflow_1a0a59c1dc2ead1a9275c62885ec7545d2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1throw__on__overflow_1a0a59c1dc2ead1a9275c62885ec7545d2" kindref="member">on_overflow</ref>(T<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1integer__overflow" kindref="compound">error::integer_overflow</ref>();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="structio_1_1throw__on__overflow_1a2ae91b1ae3d655c16f7e6a7e9a1abd92" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1throw__on__overflow_1a2ae91b1ae3d655c16f7e6a7e9a1abd92" kindref="member">on_underflow</ref>(T<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1integer__underflow" kindref="compound">error::integer_underflow</ref>();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal">};</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="structio_1_1ignore__overflow" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1ignore__overflow" kindref="compound">ignore_overflow</ref><sp/>{</highlight></codeline>
<codeline lineno="768" refid="structio_1_1ignore__overflow_1aed3e5026cfa7157ea9270ae377d1026b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1ignore__overflow_1aed3e5026cfa7157ea9270ae377d1026b" kindref="member">on_overflow</ref>(T<sp/>&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770" refid="structio_1_1ignore__overflow_1aece692f7a20933149ec99aa1f97458ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1ignore__overflow_1aece692f7a20933149ec99aa1f97458ad" kindref="member">on_underflow</ref>(T<sp/>&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="771"><highlight class="normal">};</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773" refid="structio_1_1set__to__max__on__overflow" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structio_1_1set__to__max__on__overflow" kindref="compound">set_to_max_on_overflow</ref><sp/>{</highlight></codeline>
<codeline lineno="774" refid="structio_1_1set__to__max__on__overflow_1a770dee97a1ee55131163e6be8d4c0d9d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1set__to__max__on__overflow_1a770dee97a1ee55131163e6be8d4c0d9d" kindref="member">on_overflow</ref>(T<sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>(std::numeric_limits&lt;T&gt;::max)<sp/>instead<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::numeric_limits&lt;T&gt;::max<sp/>to<sp/>make<sp/>code<sp/>including<sp/>windows.h<sp/>with<sp/>its<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>macro<sp/>happy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(std::numeric_limits&lt;T&gt;::max)();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="structio_1_1set__to__max__on__overflow_1a812d316e2b23247df19ca83bfda90a59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structio_1_1set__to__max__on__overflow_1a812d316e2b23247df19ca83bfda90a59" kindref="member">on_underflow</ref>(T<sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(std::numeric_limits&lt;T&gt;::min)();</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal">};</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>quote_policy&gt;</highlight></codeline>
<codeline lineno="788" refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">chop_next_column</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref>)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">assert</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref><sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>col_begin<sp/>+<sp/>(...<sp/>-<sp/>col_begin)<sp/>removes<sp/>the<sp/>constness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref><sp/>=</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref><sp/>+<sp/>(quote_policy::find_next_column_end(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>)<sp/>-<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref><sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>trim_policy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>quote_policy&gt;</highlight></codeline>
<codeline lineno="805" refid="namespaceio_1_1detail_1af7113f75d17577c3964d5d45fef65d43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1af7113f75d17577c3964d5d45fef65d43" kindref="member">parse_line</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">sorted_col</ref>,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;col_order)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>col_order)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>::io::error::too_few_columns();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>,<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">chop_next_column&lt;quote_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trim_policy::trim(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quote_policy::unescape(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">sorted_col</ref>[i]<sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>throw<sp/>::io::error::too_many_columns();</highlight></codeline>
<codeline lineno="822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>column_count,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>trim_policy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>quote_policy&gt;</highlight></codeline>
<codeline lineno="825" refid="namespaceio_1_1detail_1a29aee32eb931073ca832933c7ed7cf51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a29aee32eb931073ca832933c7ed7cf51" kindref="member">parse_header_line</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref>,<sp/>std::vector&lt;int&gt;<sp/>&amp;col_order,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_name</ref>,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1aa04154e5c37e292c5acc7533d28a9da7" kindref="member">ignore_column</ref><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">ignore_policy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>col_order.clear();</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">found</ref>[<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">column_count</ref>];</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>std::fill(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">found</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">found</ref><sp/>+<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">column_count</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref>)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>,<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref>;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">chop_next_column&lt;quote_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">line</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref>);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>trim_policy::trim(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>quote_policy::unescape(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_end</ref>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">column_count</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref><sp/>==<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_name</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">found</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1duplicated__column__in__header" kindref="compound">error::duplicated_column_in_header</ref><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">err</ref>;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">err</ref>.<ref refid="structio_1_1error_1_1with__column__name_1a2a8144d3591a4bb618368ca7261befef" kindref="member">set_column_name</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">err</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">found</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_order.push_back(i);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">ignore_policy</ref><sp/>&amp;<sp/>::io::ignore_extra_column)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_order.push_back(-1);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1extra__column__in__header" kindref="compound">error::extra_column_in_header</ref><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">err</ref>;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">err</ref>.<ref refid="structio_1_1error_1_1with__column__name_1a2a8144d3591a4bb618368ca7261befef" kindref="member">set_column_name</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_begin</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">err</ref>;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">ignore_policy</ref><sp/>&amp;<sp/>::io::ignore_missing_column))<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">column_count</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">found</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structio_1_1error_1_1missing__column__in__header" kindref="compound">error::missing_column_in_header</ref><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">err</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">err</ref>.<ref refid="structio_1_1error_1_1with__column__name_1a2a8144d3591a4bb618368ca7261befef" kindref="member">set_column_name</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col_name</ref>[i].<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">c_str</ref>());</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">err</ref>;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872" refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1invalid__single__character" kindref="compound">error::invalid_single_character</ref>();</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>=<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1invalid__single__character" kindref="compound">error::invalid_single_character</ref>();</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881" refid="namespaceio_1_1detail_1a0a834d872803de946c45bb9993ff1cdb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/>std::string<sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885" refid="namespaceio_1_1detail_1a4b18842fa823d4e5ff2856c106a935f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889" refid="namespaceio_1_1detail_1a51894246476f8614a57292c4ecd5ee70" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;<sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="892" refid="namespaceio_1_1detail_1a7e3c24544bc8a152ad2fdcad068cc15d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a7e3c24544bc8a152ad2fdcad068cc15d" kindref="member">parse_unsigned_integer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>&amp;&amp;<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">y</ref><sp/>=<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>&gt;<sp/>((std::numeric_limits&lt;T&gt;::max)()<sp/>-<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">y</ref>)<sp/>/<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overflow_policy::on_overflow(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>=<sp/>10<sp/>*<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>+<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1no__digit" kindref="compound">error::no_digit</ref>();</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908" refid="namespaceio_1_1detail_1a989169352cd4a941d3a4b41d34a5b507" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_unsigned_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="911" refid="namespaceio_1_1detail_1a7c503975d9ebb907a137437620cd88e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_unsigned_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="914" refid="namespaceio_1_1detail_1aff0db116bccbbb97c60e15c88cf08c82" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_unsigned_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917" refid="namespaceio_1_1detail_1af21cf2ebdccbd344c3fa97ff290d5ba3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_unsigned_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="920" refid="namespaceio_1_1detail_1adfb924cb03fa5c6bbf3885eaae6b4900" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_unsigned_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="925" refid="namespaceio_1_1detail_1abfca68de6bc98a4b80ee15bf6872d9a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1abfca68de6bc98a4b80ee15bf6872d9a1" kindref="member">parse_signed_integer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>&amp;&amp;<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">y</ref><sp/>=<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>&lt;<sp/>((std::numeric_limits&lt;T&gt;::min)()<sp/>+<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">y</ref>)<sp/>/<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overflow_policy::on_underflow(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>=<sp/>10<sp/>*<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>-<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1no__digit" kindref="compound">error::no_digit</ref>();</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_unsigned_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948" refid="namespaceio_1_1detail_1ac3445c529796f7c8a21353123b032359" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_signed_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951" refid="namespaceio_1_1detail_1a8dd4aa570ce585f60eba494b2ae46f8f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_signed_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954" refid="namespaceio_1_1detail_1a4cac9397d7e326ffef73945d8dfdb3f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_signed_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="957" refid="namespaceio_1_1detail_1af4f571ee91d11a004c807122129b658f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_signed_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="960" refid="namespaceio_1_1detail_1adae9f76b938985b1a9a93456cb9181eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_signed_integer&lt;overflow_policy&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964" refid="namespaceio_1_1detail_1a4f2b98902e1a5278853786aa8582df93" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a4f2b98902e1a5278853786aa8582df93" kindref="member">parse_float</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">is_neg</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">is_neg</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>&amp;&amp;<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">y</ref><sp/>=<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>*=<sp/>10;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>+=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>||<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">pos</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&lt;=<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>&amp;&amp;<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">pos</ref><sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">y</ref><sp/>=<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>+=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">y</ref><sp/>*<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>||<sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">parse_signed_integer&lt;set_to_max_on_overflow&gt;</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">e</ref>);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">e</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref><sp/>base;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">e</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref>(0.1);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">e</ref><sp/>=<sp/>-<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>=<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref>(10);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">e</ref><sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">e</ref><sp/>&amp;<sp/>1)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>=<sp/>base<sp/>*<sp/>base;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">e</ref><sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>*=<sp/>base;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>*=<sp/>base;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1no__digit" kindref="compound">error::no_digit</ref>();</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">is_neg</ref>)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref><sp/>=<sp/>-<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026" refid="namespaceio_1_1detail_1a60d2e8a932d377f25fb4ea80fa56199e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a4f2b98902e1a5278853786aa8582df93" kindref="member">parse_float</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029" refid="namespaceio_1_1detail_1af795e6a74044788a6b4a3179a7839a9a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a4f2b98902e1a5278853786aa8582df93" kindref="member">parse_float</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032" refid="namespaceio_1_1detail_1aa5ded2fa5b85ef50ef2c0c3334f8fe6e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><ref refid="namespaceio_1_1detail_1a4f2b98902e1a5278853786aa8582df93" kindref="member">parse_float</ref>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036" refid="namespaceio_1_1detail_1ae54f2ce37fee9f7320e2167cc6157a98" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceio_1_1detail_1a2109437c5cfde706232ff352a06a8c9f" kindref="member">parse</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>,<sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref><sp/>&amp;<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mute<sp/>unused<sp/>variable<sp/>compiler<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">void</ref>)<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">col</ref>;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">void</ref>)<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GCC<sp/>evaluates<sp/>&quot;false&quot;<sp/>when<sp/>reading<sp/>the<sp/>template<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;sizeof(T)!=sizeof(T)&quot;<sp/>only<sp/>when<sp/>instantiating<sp/>it.<sp/>This<sp/>is<sp/>why</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>strange<sp/>construct<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref>)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">T</ref>),</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can<sp/>not<sp/>parse<sp/>this<sp/>type.<sp/>Only<sp/>builtin<sp/>integrals,<sp/>floats,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;char,<sp/>char*,<sp/>const<sp/>char*<sp/>and<sp/>std::string<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>column_count,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>trim_policy<sp/>=<sp/>trim_</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">s&lt;&apos;<sp/>&apos;,<sp/>&apos;\t&apos;&gt;,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>quote_policy<sp/>=<sp/>no_quote_escape&lt;&apos;,&apos;&gt;,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>overflow_policy<sp/>=<sp/>throw_on_overflow,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>comment_policy<sp/>=<sp/>no_comment&gt;</highlight></codeline>
<codeline lineno="1054" refid="classio_1_1_c_s_v_reader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classio_1_1_c_s_v_reader" kindref="compound">CSVReader</ref><sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_line_reader" kindref="compound">LineReader</ref><sp/>in;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*row[column_count];</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>std::string<sp/>column_names[column_count];</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>col_order;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>ColNames&gt;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_column_names(std::string<sp/>s,<sp/>ColNames...<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>column_names[column_count<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(ColNames)<sp/>-<sp/>1]<sp/>=<sp/>std::move(s);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>set_column_names(std::forward&lt;ColNames&gt;(cols)...);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_column_names()<sp/>{}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1072" refid="classio_1_1_c_s_v_reader_1abb95a0607cd9a32231daf62f8fc841ab" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_c_s_v_reader_1abb95a0607cd9a32231daf62f8fc841ab" kindref="member">CSVReader</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073" refid="classio_1_1_c_s_v_reader_1a0507ac5abe201969a15df76795e13c28" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_c_s_v_reader_1a0507ac5abe201969a15df76795e13c28" kindref="member">CSVReader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader" kindref="compound">CSVReader</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074" refid="classio_1_1_c_s_v_reader_1a251282b8a9cdf6a2f8e4be8215ca1d27" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classio_1_1_c_s_v_reader" kindref="compound">CSVReader</ref><sp/>&amp;<ref refid="classio_1_1_c_s_v_reader_1a251282b8a9cdf6a2f8e4be8215ca1d27" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader" kindref="compound">CSVReader</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="1077" refid="classio_1_1_c_s_v_reader_1adc9a15ffb046bfa61407d5b12ed0204c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader_1adc9a15ffb046bfa61407d5b12ed0204c" kindref="member">CSVReader</ref>(Args<sp/>&amp;&amp;...<sp/>args)<sp/>:<sp/>in(std::forward&lt;Args&gt;(args)...)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fill(row,<sp/>row<sp/>+<sp/>column_count,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>col_order.resize(column_count);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>column_count;<sp/>++i)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>col_order[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>column_count;<sp/>++i)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>column_names[i<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;col&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086" refid="classio_1_1_c_s_v_reader_1a6be5e639c82112332fe527525ff4319a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classio_1_1_c_s_v_reader_1a6be5e639c82112332fe527525ff4319a" kindref="member">next_line</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in.<ref refid="classio_1_1_line_reader_1a09a64339a84ceeb09f9a1249beacca15" kindref="member">next_line</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>ColNames&gt;</highlight></codeline>
<codeline lineno="1089" refid="classio_1_1_c_s_v_reader_1ac5ece4c73a35ce331cdd27e98587beda" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader_1ac5ece4c73a35ce331cdd27e98587beda" kindref="member">read_header</ref>(<ref refid="namespaceio_1aa04154e5c37e292c5acc7533d28a9da7" kindref="member">ignore_column</ref><sp/>ignore_policy,<sp/>ColNames...<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(ColNames)<sp/>&gt;=<sp/>column_count,</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;not<sp/>enough<sp/>column<sp/>names<sp/>specified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(ColNames)<sp/>&lt;=<sp/>column_count,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>column<sp/>names<sp/>specified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_column_names(std::forward&lt;ColNames&gt;(cols)...);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>in.<ref refid="classio_1_1_line_reader_1a09a64339a84ceeb09f9a1249beacca15" kindref="member">next_line</ref>();</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!line)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structio_1_1error_1_1header__missing" kindref="compound">error::header_missing</ref>();</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(comment_policy::is_comment(line));</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">detail::parse_header_line&lt;column_count, trim_policy, quote_policy&gt;</ref>(</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line,<sp/>col_order,<sp/>column_names,<sp/>ignore_policy);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="structio_1_1error_1_1with__file__name" kindref="compound">error::with_file_name</ref><sp/>&amp;err)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err.<ref refid="structio_1_1error_1_1with__file__name_1ae765de62778c989d4658b4efe2995390" kindref="member">set_file_name</ref>(in.<ref refid="classio_1_1_line_reader_1a9279e6a30a85061167ecd50e20c5a10e" kindref="member">get_truncated_file_name</ref>());</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112" refid="classio_1_1_c_s_v_reader_1a78f8b6d773e1e07c5c1c078b75ba4eae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>ColNames&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader_1a78f8b6d773e1e07c5c1c078b75ba4eae" kindref="member">set_header</ref>(ColNames...<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(ColNames)<sp/>&gt;=<sp/>column_count,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;not<sp/>enough<sp/>column<sp/>names<sp/>specified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(ColNames)<sp/>&lt;=<sp/>column_count,</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>column<sp/>names<sp/>specified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>set_column_names(std::forward&lt;ColNames&gt;(cols)...);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fill(row,<sp/>row<sp/>+<sp/>column_count,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>col_order.resize(column_count);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>column_count;<sp/>++i)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>col_order[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124" refid="classio_1_1_c_s_v_reader_1aaba91fff6faea12e451943e8d32a5a17" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader_1aaba91fff6faea12e451943e8d32a5a17" kindref="member">has_column</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>col_order.end()<sp/>!=</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::find(col_order.begin(),<sp/>col_order.end(),</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::find(std::begin(column_names),<sp/>std::end(column_names),</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name)<sp/>-</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::begin(column_names));</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132" refid="classio_1_1_c_s_v_reader_1a4096c1e43a4fba2b4f5ae21d047b5fbc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader_1a4096c1e43a4fba2b4f5ae21d047b5fbc" kindref="member">set_file_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;file_name)<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>in.<ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136" refid="classio_1_1_c_s_v_reader_1a5f1dc083a8fa8661f5ecdcf6aebc7b24" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader_1a5f1dc083a8fa8661f5ecdcf6aebc7b24" kindref="member">set_file_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name)<sp/>{<sp/>in.<ref refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" kindref="member">set_file_name</ref>(file_name);<sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138" refid="classio_1_1_c_s_v_reader_1a40f4b2d96c12a1f3985a9cfb1c5a5eaa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classio_1_1_c_s_v_reader_1a40f4b2d96c12a1f3985a9cfb1c5a5eaa" kindref="member">get_truncated_file_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in.<ref refid="classio_1_1_line_reader_1a9279e6a30a85061167ecd50e20c5a10e" kindref="member">get_truncated_file_name</ref>();</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142" refid="classio_1_1_c_s_v_reader_1a1303bd6a2eb0d3d7c743212e52839ac4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader_1a1303bd6a2eb0d3d7c743212e52839ac4" kindref="member">set_file_line</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>file_line)<sp/>{<sp/>in.<ref refid="classio_1_1_line_reader_1a581b55d4ced6adb964de50fa8ac6eb08" kindref="member">set_file_line</ref>(file_line);<sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144" refid="classio_1_1_c_s_v_reader_1a065f805596018d1568b81152e6a22e0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader_1a065f805596018d1568b81152e6a22e0c" kindref="member">get_file_line</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in.<ref refid="classio_1_1_line_reader_1a3f3459e22ed8e459238c290050b6722e" kindref="member">get_file_line</ref>();<sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parse_helper(std::size_t)<sp/>{}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>ColType&gt;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parse_helper(std::size_t<sp/>r,<sp/>T<sp/>&amp;t,<sp/>ColType<sp/>&amp;...<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row[r])<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">::io::detail::parse&lt;overflow_policy&gt;</ref>(row[r],<sp/>t);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(error::with_column_content<sp/>&amp;err)<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err.set_column_content(row[r]);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(error::with_column_name<sp/>&amp;err)<sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err.set_column_name(column_names[r].c_str());</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>parse_helper(r<sp/>+<sp/>1,<sp/>cols...);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1168" refid="classio_1_1_c_s_v_reader_1a5ca6e99a0c31b29b8d0fd14c9ec70ea3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>ColType&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classio_1_1_c_s_v_reader_1a5ca6e99a0c31b29b8d0fd14c9ec70ea3" kindref="member">read_row</ref>(ColType<sp/>&amp;...<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(ColType)<sp/>&gt;=<sp/>column_count,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;not<sp/>enough<sp/>columns<sp/>specified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(ColType)<sp/>&lt;=<sp/>column_count,</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>columns<sp/>specified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>in.<ref refid="classio_1_1_line_reader_1a09a64339a84ceeb09f9a1249beacca15" kindref="member">next_line</ref>();</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!line)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(comment_policy::is_comment(line));</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceio_1_1detail_1a5656f385aea8d6ee5814a2abc20f5191" kindref="member">detail::parse_line&lt;trim_policy, quote_policy&gt;</ref>(line,<sp/>row,<sp/>col_order);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse_helper(0,<sp/>cols...);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="structio_1_1error_1_1with__file__name" kindref="compound">error::with_file_name</ref><sp/>&amp;err)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err.<ref refid="structio_1_1error_1_1with__file__name_1ae765de62778c989d4658b4efe2995390" kindref="member">set_file_name</ref>(in.<ref refid="classio_1_1_line_reader_1a9279e6a30a85061167ecd50e20c5a10e" kindref="member">get_truncated_file_name</ref>());</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="structio_1_1error_1_1with__file__line" kindref="compound">error::with_file_line</ref><sp/>&amp;err)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err.<ref refid="structio_1_1error_1_1with__file__line_1aa92778a81778abc676ec6ee9952bba8c" kindref="member">set_file_line</ref>(in.<ref refid="classio_1_1_line_reader_1a3f3459e22ed8e459238c290050b6722e" kindref="member">get_file_line</ref>());</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>io</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/black-scholes-cpp/csv.h"/>
  </compounddef>
</doxygen>
